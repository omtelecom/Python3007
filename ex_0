"""
Найти номер и значение первого положительного элемента списка.
"""


def find_first_positive(lst):
    for i, j in enumerate(lst):
        if j > 0:
            return i, j


if __name__ == '__main__':
    # some tests
    assert find_first_positive([-1, 2, 5]) == (1, 2)
    assert find_first_positive([1, 2, 5]) == (0, 1)
    assert find_first_positive([-1, -2, 5]) == (2, 5)
    assert find_first_positive([-1, -2, -5]) is None

"""
2. Найти сумму положительных элементов списка.
"""


def sum_of_positives(lst):
    return sum([i for i in lst if i >=0])


if __name__ == '__main__':
    assert sum_of_positives([1, 2, -4, 0]) == 3
    assert sum_of_positives([-1, -2, -3]) == 0
    assert sum_of_positives([1, 1, 1]) == 3


"""
3. Дан список, содержащий положительные и отрицательные числа.
Заменить все элементы списка на противоположные по знаку.
Например, задан список [1, -5, 0, 3, -4].
После преобразования должно получиться [-1, 5, 0, -3, 4].
"""


def reverse_values(lst):
    for i in range(len(lst)):
        lst[i] = lst[i] * (-1)
    return lst


if __name__ == '__main__':
    assert reverse_values([-1, -2, -3]) == [1, 2, 3]
    assert reverse_values([1, 1, 1]) == [-1, -1, -1]
    assert reverse_values([]) == []
    assert reverse_values([1, -1, 0]) == [-1, 1, 0]
